Host local
    user username
    hostname 127.0.0.1
    port 22
    ProxyCommand nc -X 5 -x 127.0.0.1:1080 -w 180 %h %p



# Intro.
# you can change port by /etc/ssh/sshd_config
# Port 443 or other
#
# Example
#
# Host cloudstack-1
#     HostName example.com
#     Port 2222
#     User admin
#     IdentityFile  ~/.ssh/id_example
#     IdentitiesOnly yes
#
# Host openstack-1
#     HostName 192.168.33.10
#     User anotheruser
#     PubkeyAuthentication no
# Host aws-1
#     HostName some.address.ec2.aws.com
#     User awsuser
#     IdentityFile  ~/.ssh/aws_identity.pem
#     IdentitiesOnly yes

# 如果出现一只提示是否要加入（add to known host）时，可以启用下面的禁用
# UserKnownHostsFile /dev/null
# StrictHostKeyChecking no

Host *  # 表示应用于所有Host
# 默认开启
ControlMaster auto
ControlPath ~/.ssh/sockets/%r@%h-%p 
# 确保~/.ssh/sockets文件夹存在
# 这个配置可以保证如果ssh remote server的hostname变更，可以建立新的session
# %r remote_user
# %h hostname
# %p server port
# session 保留时间，秒， 即使退出ssh，下次连接还是飞速
ControlPersist 600

Host dev # 一台你不关心安全性的机器
    # 采用最简单的加密算法(替换复杂的加密算法，提高速度)
    Ciphers arcfour

Host */* #  to use one host as a jumphost
    ProxyCommand ssh $(dirname %h) nc -w1 $(basename %h) %p
    ControlMaster no
    # using the "jumphost/server" syntax. It even allows chaining! Minor issue: the jumphost needs to know about the final destination, so you'll most likely need to deploy your .ssh/config on the jumphost(s) as well.
