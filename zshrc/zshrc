#history max num
export HISTSIZE=10000
#history max save
export SAVEHIST=10000
export EDITOR=vim
# set -o vi #设置shell快捷键的默认器


###JAVA###
# export JAVA_HOME=/usr/java/jdk1.8.0_05
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export JRE_HOME=$JAVA_HOME/jre
CLASSPATH=./:$JAVA_HOME/lib:$JRE_HOME/lib:$JRE_HOME/lib/tools.jar
export CLASSPATH
PATH="$JAVA_HOME/bin:$PATH"

###NODE###
NODE_HOME="/usr/local/node"
PATH="$NODE_HOME/bin:$PATH"

# nvm for various node version
export NVM_DIR="~/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm


###PHP###
PHP_HOME="/usr/local/php5.6"
PATH="$PHP_HOME/bin:$PATH"

###GO###
GO_HOME="/usr/local/go"
GOROOT=$HOME/workspace/go
export GOPATH=$HOME/workspace/go
PATH="$GO_HOME/bin:$GOROOT/bin:$PATH"

###python###
PYTHON3_HOME="/usr/local/python/3.4"
PYTHON2_HOME="/usr/local/python/2.7"
PATH="$PYTHON3_HOME/bin:$PATH"
PATH="$PYTHON2_HOME/bin:$PATH"

###scala###
SCALA_HOME="/usr/local/scala"
PATH="$SCALA_HOME/bin:$PATH"

###ANT###
ANT_HOME="/usr/local/ant"
PATH="$ANT_HOME/bin:$PATH"

###linuxbrew###
LINUXBREW="$HOME/.linuxbrew"
export LD_LIBRARY_PATH=$LINUXBREW/lib:$LD_LIBRARY_PATH
PATH="$LINUXBREW/bin:$PATH"


# Git for SAE
export GIT_FOR_SAE_ROOT=~/tools/git_svn_sae/ #此处就是你刚刚放置clone下来的项目路径
PATH="$GIT_FOR_SAE_ROOT:$PATH"

# Cling for centos7
CLING_HOME="/usr/local/cling"
PATH="$CLING_HOME/bin:$PATH"

export PYENV_ROOT="$HOME/.pyenv"
PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

PATH="$PATH:/usr/local/bin:/bin:/usr/bin:$HOME/bin:/usr/local/sbin:/usr/sbin:/sbin"

# 这里主要是屏蔽tmux对path再次赋值，导致type command时出现两个一样的路径
# [[ -z $TMUX ]] && export PATH

###配置c编译
# export CPATH="/usr/bin/gcc"
# export LIBRARY_PATH="/usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64"
# export C_INCLUDE_PATH="/usr/include:/usr/local/include"

# # Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
#

# if you set the zsh plugin, you do not need below two lines.
# [[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && source ~/.autojump/etc/profile.d/autojump.sh
# autoload -U compinit && compinit -u

# like autojump, based on 'frecency'.
export _Z_CMD='j'
. ~/.dotfiles/module/z/z.sh

if { [ "$TERM" = "screen" ] && [ -n "$TMUX" ]; } then
    # export PS1="%{$fg[cyan]%}%c$(git_prompt_info) %(!.%{$fg_bold[red]%}#.%{$fg_bold[red]%}❯)%{$reset_color%}"
fi


echo "THE BEST YANTZE TO BE ZHI"

#if mac
if { [ `uname` = "Darwin" ] } then
    export DOCKER_HOST=tcp://localhost:4243
    alias macvim='/Applications/MacVim.app/Contents/MacOS/MacVim'
    alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'

fi

###path PATH###
# Set the list of directories that Zsh searches for programs.
# /opt/homebrew-cask/Caskroom/postgres/latest/Postgres.app/Contents/MacOS/bin  #for mac
# path=(
#   /usr/local/{bin,sbin}
#   /usr/local/heroku/bin
#   $path
# )


###C###
go_libs="-lm"
go_flags="-g -Wall -include allheads.h -O3"
alias go_c="c99 -xc '-' $go_libs $go_flags"


###function###
#translate dig
function td {
dig "$*.jianbing.org" +short txt | perl -pe's/\\(\d{1,3})/chr $1/eg; s/(^"|"$)//g'
}


###display language
export LANG="en_US.UTF-8"
export LC_COLLATE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
export LC_MONETARY="en_US.UTF-8"
export LC_NUMERIC="en_US.UTF-8"
export LC_TIME="en_US.UTF-8"
# export LC_ALL=

###设置grep的高亮颜色为土黄色
export GREP_COLORS="01;36"

alias chinese='LC_ALL="zh_CN.UTF-8"'
alias chinese2='LANG=zh_CN.UTF-8 LC_ALL="zh_CN.UTF-8"'
alias japanese='LANG="ja_JP.UTF-8" LC_ALL="ja_JP.UTF-8"'
alias japanese2='LANG="ja_JP.UTF-8" LC_ALL="ja_JP.UTF-8"'
# 例如: japanese vim显示的就是日语的界面 :)
# locale -v

