Memcache::replace -- Replace value of the existing item

  bool Memcache::replace(string key, mixed var [, int flag [, int expire]])~

|Memcache::replace| should be used to replace value of existing item with
{key}. In case if item with such key doesn't exists, |Memcache::replace|
returns FALSE. For the rest |Memcache::replace| behaves similarly to
|Memcache::set|. Also you can use |memcache_replace| function.

{key} The key that will be associated with the item.

{var} The variable to store. Strings and integers are stored as is, other
types are stored serialized.

{flag} Use MEMCACHE_COMPRESSED to store the item compressed (uses zlib).

{expire} Expiration time of the item. If it's equal to zero, the item will
never expire. You can also use Unix timestamp or a number of seconds starting
from current time, but in the latter case the number of seconds may not exceed
2592000 (30 days).

Returns TRUE on success or FALSE on failure.

|Memcache::replace| example

<?php >
  $memcache_obj = memcache_connect('memcache_host', 11211);
  
  /* procedural API */
  memcache_replace($memcache_obj, "test_key", "some variable", false, 30);
  
  /* OO API */
  $memcache_obj->replace("test_key", "some variable", false, 30);
?>





|Memcache::set| |Memcache::add|

vim:ft=help:
