# Tmux General Setting

# {{{ Shortcut Keys

unbind ^b
set -g prefix ^a

bind a send-prefix
bind ^a send-keys 'C-a'

unbind '"'
unbind %

# ::window
# The -r flag indicates this key may repeat, see the repeat-time option.
# bind -r \\ split-window -h
bind -r | split-window -h
# Horizontal split-window from current dir
bind -r - split-window
# create new window #from the current dir
bind c new-window -n 'valid'

# ::session
bind -r 9 switch-client -p # (
bind -r 0 switch-client -n # )

# ::panel
bind k selectp -U # 选择上窗格
bind j selectp -D # 选择下窗格
bind h selectp -L # 选择左窗格
bind l selectp -R # 选择右窗格

bind ^k resizep -U 8 # 跟选择窗格的设置相同，只是多加 Ctrl（Ctrl-k）
bind ^j resizep -D 8 # 同上
bind ^h resizep -L 8 # ...
bind ^l resizep -R 8 # ...

bind ^u swapp -U # 与窗格逆时针 Ctrl-u
bind ^d swapp -D # 与窗格顺时针 Ctrl-d

bind S select-layout even-vertical # current window's panes vertical. even mean equal.
bind V select-layout even-horizontal # current window's panes horizontal
# more layout from man tmux

# 执行命令，比如看 Manpage、查 Perl 函数
bind m command-prompt "splitw -h 'exec man %%'"
#bind @ command-prompt "splitw -h 'exec perldoc -f %%'"
bind e command-prompt "splitw -h 'exec %%'"

# Use vim keybindings in copy mode
setw -g mode-keys vi

bind-key r source-file ~/.tmux.conf \; display-message "source-file done"

# set-option -ga terminal-overrides ",tmux-256color-italic:Tc"

# }}}

# {{{ Custom Setting

# set 就是 set-option 的参数介绍：
# If -g is given, the global session or window option is set.
# a server option with -s, otherwise a session option.

# set -g default-terminal "tmux-256color"
# this is less same tmux -2 , the tmux -2 is more compatible
# 让终端支持斜体展示
# https://9.obelus.net/2017/05/05/italic_in_terminal_and_tmux.html

# True Color 的支持，在外面是 xterm-256color*, 在里面是 tmux-256color*
# https://github.com/tmux/tmux/issues/696
# set -g default-terminal "xterm-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal 'tmux-256color'
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# set-option -ga terminal-overrides ",xterm-256color*:Tc:smso=^[[3m"
# set-option -ga terminal-overrides ",xterm-256color:Tc"


# https://github.com/lifepillar/vim-solarized8
# https://github.com/icymind/NeoSolarized
# hack to make vim work well in tmux
# set t_8f=[38;2;%lu;%lu;%lum
# set t_8b=[48;2;%lu;%lu;%lum

# let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
# let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"


# off set window title, use ^a+, to manual rename
set-window-option -g automatic-rename off
set -g allow-rename off

set -g history-limit 100000

# setw -g aggressive-resize off

#允许你两个快捷键最快的重复
set -sg escape-time 10


# Mouse works as expected
# when open the mouse, you want to use putty copy str to system
# you can use Shift + mouse
# you can use Shift + middleclick , it is more powerful than mouse
# there also use middleclick to select to copy some thing to tmux clipboard and use click midddleclick to paste

# mouse can scroll version >= 2.1
# https://github.com/tmux/tmux/issues/495
# set -g mouse on



# default shell
# set -g default-shell /bin/zsh
# set -g default-shell $SHELL
# set -g default-command /bin/zsh
set -g default-command $SHELL

# Fix pbcopy/pbpaste
# brew install reattach-to-user-namespace --wrap-pbcopy-and-pbpaste

# Fix the F1-F9
# To fix screen terminfo function key entries when using PuTTY:
# https://gist.github.com/pickerweng/1713936
set -g terminal-overrides "*:kf1=\e[11~:kf2=\e[12~:kf3=\e[13~:kf4=\e[14~:kf5=\e[15~:kf6=\e[17~:kf7=\e[18~:kf8=\e[19~"

# fix the Shift+Page Up/Down
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# mapping the sequence for <M-Up> proved more difficult than I expected.
# set -g xterm-keys on
# After doing that, my mappings of <Esc>[1;3A seemed to work.
# tmux -v , can watch the current dir tmux log file have some specil key

# Ctrl keys may be prefixed with `C-' or `^', and Alt (meta) with `M-'. -- from man page
# 順便說一下, 如果是OS X的Terminal, 需在Preferences -> Profiles -> Keyboard 裏勾上"Use option as meta key".



# 左边的状态定制
set -g status-left-length 40
# set -g status-left "#[fg=green][#S] "
set -g status-left "[#[fg=green]#S:#[fg=cyan]#I] "
# ○❐✓#[fg=colour39]

# 右边定制，显示 uptime 和 loadavg：
# set -g status-right '#[fg=yellow,bg=colour230][#(uptime | sed 's@^.*average\s*..@@')] #[fg=colour137,bg=colour230,bold] [%a,%b %d #[fg=colour137,bg=colour230,bold]%H:%M:%S] '

set -g base-index 1 # 窗口从 1 开始
set -g pane-base-index 1 # pane（窗格）下标从1开始
set -g status-interval 5

# dispaly pane_current_path as the pane title
# https://stackoverflow.com/questions/9747952/pane-title-in-tmux
set -g pane-border-status top
# set -g pane-border-format "#{?pane_active,#[reverse],}#{pane_index}#[default] #{pane_current_path} \"#[fg=colour30,bold]#{pane_title} #{pane_current_command}#[fg=cyan]\""
set -g pane-border-format "#{pane_index} #{pane_current_path} \"#[fg=colour30,bold]#{pane_title}#[default]\""
# 手动修改 panel 的 title
# tmux select-pane -T "#[fg=colour30,bold]Untitled"]
bind P command-prompt "select-pane -T '#[fg=colour30,bold]%%#[fg=cyan]'"
bind O select-pane -T "#[fg=colour30,bold]$(echo hhhh)#[default]"
# 可以通过 hooks 设置
# tmux set-hook -g after-split-window "select-pane -T \"Untitled\""
# 也可以通过在 shell 中直接设置
# https://stackoverflow.com/questions/40234553/how-to-rename-a-pane-in-tmux
# function settitle() {
#   export PS1="\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\n$ "
#   echo -ne "\e]0;$1\a"
# }

# Theme
bind N source-file ~/.dotfiles/tmux/tmuxcolors-ocean-dark.conf
bind M source-file ~/.dotfiles/tmux/tmuxcolors-ocean-light.conf

source-file ~/.dotfiles/tmux/tmuxcolors-ocean-dark.conf

if-shell '[ `uname` = "Darwin" ]' \
    "source-file ~/.dotfiles/tmux/darwin.conf"

if-shell '[ `uname` = "Linux" ]' \
    "source-file ~/.dotfiles/tmux/linux.conf"

if-shell '[ -s "~/.local/.tmux_local.conf" ]' \
    "source-file ~/.local/.tmux_local.conf"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
run '~/.tmux/plugins/tpm/tpm'

# }}}

# Useful Shortcut Cheat {{{
#
# use space to enter visual model in ctrl+a ] condition
# Other check `C-a ?`
#
# Managing Panel
# C-a -          new horizontal panel
# C-a |          new vertical panel
# C-a x          kill the current panel
# C-a space      change panel layout
# C-a j/k/h/l    go to panel
# }              Swap the current pane with the next pane.
# {              Swap the current pane with the previous pane.

# Managing Windows
# C-a c          create a new window
# C-a 1 ...      switch to window 1, ..., 8
# C-a p          previous window
# C-a n          next window
# C-a w          choose window from a list

# Switch between sessions:
# C-a (          previous session, or 9
# C-a )          next session, or 0
# C-a L          ‘last’ (previously used) session
# C-a s          choose a session from a list

# Custom window
# C-a ,          rename current window
# C-a .          move window, :move-window [-s 3] -t 4
# C-a :swapw [-s 3] -t 1    swap window, :swap-window [-s 3] -t 1

# Store tmux session shortcut
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore
# https://github.com/tmux-plugins/tmux-resurrect

# New shortcut
# C-a <          show shortcut panel

# }}}

# vim: set ts=4 sw=4 tw=0 et fdm=marker foldlevel=0 foldenable foldlevelstart=99 :
