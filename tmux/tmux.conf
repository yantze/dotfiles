# Tmux General Setting

# {{{ Shortcut Keys

unbind ^b
set -g prefix ^a
bind a send-prefix


unbind '"'
unbind %
# The -r flag indicates this key may repeat, see the repeat-time option.
bind -r \ split-window -h -c "#{pane_current_path}"
bind -r | split-window -h -c "#{pane_current_path}"
# Horizontal split-window from current dir
bind -r - split-window -c "#{pane_current_path}"
# create new window #from the current dir
bind c new-window -c "#{pane_current_path}"

bind k selectp -U # 选择上窗格
bind j selectp -D # 选择下窗格
bind h selectp -L # 选择左窗格
bind l selectp -R # 选择右窗格

bind ^k resizep -U 8 # 跟选择窗格的设置相同，只是多加 Ctrl（Ctrl-k）
bind ^j resizep -D 8 # 同上
bind ^h resizep -L 8 # ...
bind ^l resizep -R 8 # ...

bind ^u swapp -U # 与窗格逆时针 Ctrl-u
bind ^d swapp -D # 与窗格顺时针 Ctrl-d

bind S select-layout even-vertical # current window's panes vertical. even mean equal.
bind V select-layout even-horizontal # current window's panes horizontal
# more layout from man tmux

# 执行命令，比如看 Manpage、查 Perl 函数
bind m command-prompt "splitw -h 'exec man %%'"
#bind @ command-prompt "splitw -h 'exec perldoc -f %%'"
bind e command-prompt "splitw -h 'exec %%'"

# campatible with emacs shortcut
bind ^a send-keys 'C-a'

# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
# bind -t vi-copy 'Space' halfpage-down

# }}}

# Status Line {{{

# 左边的状态定制
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P - "
# ○❐✓#[fg=colour39]

# 右边定制，显示 uptime 和 loadavg：
set -g status-right "#[fg=green]#(uptime | sed 's@^.*average..@@'), #(date | cut -d ' ' -f 2-5)#[default]"

# 以下效果一样
#(date | awk '{print substr($0, 1, 27)}' )
#(uptime |cut -d ' ' -f 2)
#(uptime | cut -d: -f2)


# 当先激活窗口的颜色
setw -g window-status-current-fg red
# setw -g window-status-current-bg yellow
# set-window-option -g window-status-current-bg red
setw -g window-status-current-attr bright

# 状态行的背景和前景色
# set -g status-bg black
# set -g status-fg white

# set -g default-terminal "screen-256color"
# this is less same tmux -2 , the tmux -2 is more compatible

# start window indexing at one instead of zero 使窗口从1开始，默认从0开始
set -g base-index 1
# 设置panel的起始位置
setw -g pane-base-index 1
# 设置pane（窗格）的下标从1开始
set -g pane-base-index 1

# tmux theme
bind M source-file ~/.dotfiles/tmux/tmuxcolors-light.conf
bind N source-file ~/.dotfiles/tmux/tmuxcolors-dark.conf
bind B source-file ~/.dotfiles/tmux/tmuxcolors-256.conf

# }}}

# {{{ Setting

# set 就是 set-option 的参数介绍：
# If -g is given, the global session or window option is set.
# a server option with -s, otherwise a session option.

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
# setw -g aggressive-resize off

# default shell
# set -g default-shell /bin/zsh
# set -g default-command /bin/zsh

# Use vim keybindings in copy mode
setw -g mode-keys vi
set -g history-limit 30000


#允许你两个快捷键最快的重复
set -sg escape-time 1

# set-option -g status-utf8 on #设置状态栏显示编码 #deprecated
set -g status-interval 8 #设置状态的时间间隔

# clippaste must use oh-my-zsh clipboard plugin
# To copy:
# bind-key -n -Tcopy-mode M-w send -X copy-pipe "clipcopy "\; display-message "Copied"
# To paste:
# bind-key -n C-y run "" #clippaste | tmux load-buffer - ; tmux paste-buffer"


# Mouse works as expected
# when open the mouse, you want to use putty copy str to system
# you can use Shift + mouse
# you can use Shift + middleclick , it is more powerful than mouse
# there also use middleclick to select to copy some thing to tmux clipboard and use click midddleclick to paste

# mouse can scroll
# set-option -g mouse on

# setw -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on


# Fix pbcopy/pbpaste 
set-option -g default-command "reattach-to-user-namespace -l zsh"
# Fix some mapping
# To fix screen terminfo function key entries when using PuTTY:
# From https://gist.github.com/pickerweng/1713936
# fix the F1-F9
set -g terminal-overrides "*:kf1=\e[11~:kf2=\e[12~:kf3=\e[13~:kf4=\e[14~:kf5=\e[15~:kf6=\e[17~:kf7=\e[18~:kf8=\e[19~"
# fix the Shift+Page Up/Down
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# mapping the sequence for <M-Up> proved more difficult than I expected.
# set -g xterm-keys on
# After doing that, my mappings of <Esc>[1;3A seemed to work.
# zhi:can user tmux -v , can watch the current dir tmux log file have some specil key

# Ctrl keys may be prefixed with `C-' or `^', and Alt (meta) with `M-'. -- from man page
# 順便說一下, 如果是OS X的Terminal, 需在Preferences -> Profiles -> Keyboard 裏勾上"Use option as meta key".


# }}}

# {{{ Custom Setting

# load local tmux theme
source-file ~/.local/tmux/tmuxcolors.conf

bind-key r source-file ~/.tmux.conf \; \
        display-message "source-file done"

# prestore session
bind-key g source-file ~/.dotfiles/tmux/prestore_session_server.conf \; \
        display-message "presotre session"

run-shell ~/workspace/local/tmux-resurrect/resurrect.tmux
# store tmux session shortcut
# prefix + Ctrl-s - save 
# prefix + Ctrl-r - restore
# https://github.com/tmux-plugins/tmux-resurrect





# }}}

# Usually Shortcut Cheat {{{
#
# use space to enter visual model in ctrl+a ] condition
# Other check `C-a ?`
#
# Managing Panel
# C-a -          new horizontal panel
# C-a |          new vertical panel
# C-a x          kill the current panel
# C-a space      change panel layout
# C-a j/k/h/l    go to panel

# Managing Windows
# C-a c          create a new window
# C-a 1 ...      switch to window 1, ..., 9, 0
# C-a p          previous window
# C-a n          next window
# C-a w          choose window from a list

# Switch between sessions:
# C-a (          previous session
# C-a )          next session
# C-a L          ‘last’ (previously used) session
# C-a s          choose a session from a list

# 
# }}}

# vim: set ts=4 sw=4 tw=0 et fdm=marker foldlevel=0 foldenable foldlevelstart=99 :
