# General Setting

# y and p as in vim
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
# bind -t vi-copy 'Space' halfpage-down

set -g prefix ^a
unbind ^b
bind a send-prefix

#set-option -g prefix C-a
# set-window-option -g automatic-rename off
set -g history-limit 10000

unbind '"'
bind - splitw -v # 分割成上下两个窗口
unbind %
bind | splitw -h # 分割成左右两个窗口

bind k selectp -U # 选择上窗格
bind j selectp -D # 选择下窗格
bind h selectp -L # 选择左窗格
bind l selectp -R # 选择右窗格

bind ^k resizep -U 8 # 跟选择窗格的设置相同，只是多加 Ctrl（Ctrl-k）
bind ^j resizep -D 8 # 同上
bind ^h resizep -L 8 # ...
bind ^l resizep -R 8 # ...

bind ^u swapp -U # 与窗格逆时针 Ctrl-u
bind ^d swapp -D # 与窗格顺时针 Ctrl-d

bind H select-layout even-vertical # current window's panes vertical. even mean equal.
bind L select-layout even-horizontal # current window's panes horizontal
# more layout from man tmux

setw -g aggressive-resize on

# 执行命令，比如看 Manpage、查 Perl 函数
bind m command-prompt "splitw -h 'exec man %%'"
#bind @ command-prompt "splitw -h 'exec perldoc -f %%'"
bind e command-prompt "splitw -h 'exec %%'"

# 复制tmux粘贴板的内容到linux系统粘贴板
# display-message "Copied tmux buffer to system clipboard"


#定制状态行

#左边的状态定制
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"
# ○❐✓#[fg=colour39]

#右边定制，显示 uptime 和 loadavg：
set -g status-right "#[fg=green]#(uptime | sed 's@^.*average..@@'), #(date | cut -d ' ' -f 2-5)#[default]"

#以下效果一样
#(date | awk '{print substr($0, 1, 27)}' )
#(uptime |cut -d ' ' -f 2)
#(uptime | cut -d: -f2)


#状态行的背景和前景色:
set -g status-bg black
set -g status-fg white

#当先激活窗口的颜色
setw -g window-status-current-fg red
#setw -g window-status-current-bg yellow
#set-window-option -g window-status-current-bg red
setw -g window-status-current-attr bright



# Enable vi keys
setw -g mode-keys vi

# set -g default-terminal "screen-256color"
# this is less same tmux -2 , the tmux -2 is more compatible

# start window indexing at one instead of zero 使窗口从1开始，默认从0开始
set -g base-index 1
# 设置panel的起始位置
setw -g pane-base-index 1
# 设置pane（窗格）的下标从1开始
set -g pane-base-index 1

#允许你两个快捷键最快的重复
set -sg escape-time 1

set-option -g status-utf8 on #设置状态栏显示编码
set -g status-interval 8 #设置状态的时间间隔



bind-key r source-file ~/.tmux.conf \; \
        display-message "source-file done"

bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "$SHELL -c links /tmp/tmux-buffer"
# same function
# bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "links" '$SHELL -c "links< /tmp/tmux-buffer"'


# This quick snippet will have tmux notify you in the status area when a window has activity:
# setw -g monitor-activity on
# set -g visual-activity on

# bind-key -n M-c kill-pane \; select-layout
# bind-key -n M-n split-window \; select-layout

#Mouse works as expected
#when open the mouse, you want to use putty copy str to system
#you can use Shift + mouse
#you can use Shift + middleclick , it is more powerful than mouse
#there also use middleclick to select to copy some thing to tmux clipboard and use click midddleclick to paste
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on


# Fix some mapping
# To fix screen terminfo function key entries when using PuTTY:
# From https://gist.github.com/pickerweng/1713936
# fix the F1-F9
set -g terminal-overrides "*:kf1=\e[11~:kf2=\e[12~:kf3=\e[13~:kf4=\e[14~:kf5=\e[15~:kf6=\e[17~:kf7=\e[18~:kf8=\e[19~"
# fix the Shift+Page Up/Down
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# mapping the sequence for <M-Up> proved more difficult than I expected.
# set -g xterm-keys on
# After doing that, my mappings of <Esc>[1;3A seemed to work.
# zhi:can user tmux -v , can watch the current dir tmux log file have some specil key

#Ctrl keys may be prefixed with `C-' or `^', and Alt (meta) with `M-'. -- from man page
#順便說一下, 如果是OS X的Terminal, 需在Preferences -> Settings -> Keyboard裏勾上"Use option as meta key".



# Copy and Paste
#按 C-a [ 进入复制模式，如果有设置 setw -g mode-keys vi 的话，可按 vi 的按键模式操作。移动至待复制的文本处，按一下空格，结合 vi 移动命令开始选择，选好后按回车确认。
#按 C-a ] 粘贴已复制的内容。
#在vim的情况下，可能不能通过上面的方法复制内容，可以按住shift用鼠标选择要复制的内容可以复制内容到系统的粘贴板

##Copy tmux paste buffer to CLIPBOARD(CLIPBOARD selection integration)
###must install xclip and xsel
bind C-c run "tmux save-buffer - | xclip -i -selection clipboard"
##Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"


# color (Solarized 256)
#https://github.com/seebi/tmux-colors-solarized

#默认启动应用
#new -s work # 新建名为 work 的会话，并启动 mutt
#neww rtorrent # 启动 rtorrent
#neww vim # 启动 vim
#neww zsh
#selectw -t 1 # 默认选择标号为 3 的窗口


# Base useage
# new  -s SessionName -n WindowName Command
# neww -n foo/bar foo
# splitw -v -p 50 -t 0 bar
# selectw -t 2
# selectp -t 0
# would open 2 windows, the second of which would be named foo/bar and would be split vertically in half (50%) with foo running above bar. Focus would be in window 2 (foo/bar), top pane (foo).
# the base-index have effect

# some function origin base on
# https://wiki.archlinux.org/index.php/tmux

bind V neww -n vim vim
bind P neww -n vpn -t 9 /home/winus/sbin/vpn
# bind L neww -n log -t 4 'tail -f log/unicorn.stderr.log' \; splitw 'tail -f log/development.log' \; resizep -U 10 \; selectp -U \; splitw -h \; send 'unidev && bundle exec compass watch' 'C-m'
bind R neww -n repl -t 3 \; send 'rails c' 'C-m'
