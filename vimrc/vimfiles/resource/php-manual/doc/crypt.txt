crypt -- One-way string encryption (hashing)

  string crypt(string str [, string salt])~

|crypt| will return an encrypted string using the standard Unix DES-based
encryption algorithm or alternative algorithms that may be available on the
system.

Some operating systems support more than one type of encryption. In fact,
sometimes the standard DES-based encryption is replaced by an MD5-based
encryption algorithm. The encryption type is triggered by the salt argument.
At install time, PHP determines the capabilities of the crypt function and
will accept salts for other encryption types. If no salt is provided, PHP will
auto-generate a standard two character salt by default, unless the default
encryption type on the system is MD5, in which case a random MD5-compatible
salt is generated. PHP sets a constant named CRYPT_SALT_LENGTH which tells you
whether a regular two character salt applies to your system or the longer
twelve character salt is applicable.

The standard DES-based encryption |crypt| returns the salt as the first two
characters of the output. It also only uses the first eight characters of
{str}, so longer strings that start with the same eight characters will
generate the same result (when the same salt is used).

On systems where the crypt() function supports multiple encryption types, the
following constants are set to 0 or 1 depending on whether the given type is
available:

CRYPT_STD_DES - Standard DES-based encryption with a two character salt

CRYPT_EXT_DES - Extended DES-based encryption with a nine character salt

CRYPT_MD5 - MD5 encryption with a twelve character salt starting with $1$

CRYPT_BLOWFISH - Blowfish encryption with a sixteen character salt starting
with $2$ or $2a$

As of PHP 5.3.0, PHP contains its own implementation and will use that if the
system lacks of support for one or more of the algorithms.

{str} The string to be encrypted.

{salt} An optional salt string to base the encryption on. If not provided, one
will be randomly generated by PHP each time you call this function.

If you are using the supplied salt, you should be aware that the salt is
generated once. If you are calling this function repeatedly, this may impact
both appearance and security.

Returns the encrypted string.

Version Description 5.3.0 PHP now contains its own implementation for the MD5
crypt, Standard DES, Extended DES and the Blowfish algorithms and will use
that if the system lacks of support for one or more of the algorithms.

|crypt| examples

<?php >
  $password = crypt('mypassword'); // let the salt be automatically generated
  
  /* You should pass the entire results of crypt() as the salt for comparing a
     password, to avoid problems when different hashing algorithms are used. (As
     it says above, standard DES-based password hashing uses a 2-character salt,
     but MD5-based hashing uses 12.) */
  if (crypt($user_input, $password) == $password) {
     echo "Password verified!";
  }
?>





Using |crypt| with htpasswd

<?php >
  // Set the password
  $password = 'mypassword';
  
  // Get the hash, letting the salt be automatically generated
  $hash = crypt($password);
?>





Using |crypt| with different encryption types

<?php >
  if (CRYPT_STD_DES == 1) {
      echo 'Standard DES: ' . crypt('rasmuslerdorf', 'rl') . "\n";
  }
  
  if (CRYPT_EXT_DES == 1) {
      echo 'Extended DES: ' . crypt('rasmuslerdorf', '_J9..rasm') . "\n";
  }
  
  if (CRYPT_MD5 == 1) {
      echo 'MD5:          ' . crypt('rasmuslerdorf', '$1$rasmusle$') . "\n";
  }
  
  if (CRYPT_BLOWFISH == 1) {
      echo 'Blowfish:     ' . crypt('rasmuslerdorf', '$2a$07$rasmuslerd...........$') . "\n";
  }
?>

The above example will output something similar to:

  Standard DES: rl.3StKT.4T8M
  Extended DES: _J9..rasmBYk8r9AiWNc
  MD5:          $1$rasmusle$rISCgZzpwk3UhDidwXvin0
  Blowfish:     $2a$07$rasmuslerd............nIdrcHdxcUxWomQX9j6kvERCFjTg7Ra



There is no decrypt function, since |crypt| uses a one-way algorithm.

|md5| The Mcrypt extension The Unix man page for your crypt function for more
information

vim:ft=help:
