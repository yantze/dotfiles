http_build_query -- Generate URL-encoded query string

  string http_build_query(array formdata [, string numeric_prefix [, string arg_separator]])~

Generates a URL-encoded query string from the associative (or indexed) array
provided.

{formdata} May be an array or object containing properties.

The array form may be a simple one-dimensional structure, or an array of
arrays (who in turn may contain other arrays).

{numeric_prefix} If numeric indices are used in the base array and this
parameter is provided, it will be prepended to the numeric index for elements
in the base array only.

This is meant to allow for legal variable names when the data is decoded by
PHP or another CGI application later on.

{arg_separator} arg_separator.output is used to separate arguments, unless
this parameter is specified, and is then used.

Returns a URL-encoded string.

Version Description 5.1.2 The {arg_separator} parameter was added. 5.1.3
Square brackets are escaped.

Simple usage of |http_build_query|

<?php >
  $data = array('foo'=>'bar',
                'baz'=>'boom',
                'cow'=>'milk',
                'php'=>'hypertext processor');
  
  echo http_build_query($data); // foo=bar&amp;baz=boom&cow=milk&php=hypertext+processor
  echo http_build_query($data, '', '&'); // foo=bar&amp;baz=boom&cow=milk&php=hypertext+processor
?>



|http_build_query| with numerically index elements.

<?php >
  $data = array('foo', 'bar', 'baz', 'boom', 'cow' => 'milk', 'php' =>'hypertext processor');
  
  echo http_build_query($data) . "\n";
  echo http_build_query($data, 'myvar_');
?>

The above example will output:

  0=foo&amp;1=bar&2=baz&3=boom&cow=milk&php=hypertext+processor
  myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&cow=milk&php=hypertext+processor

|http_build_query| with complex arrays

<?php >
  $data = array('user'=>array('name'=>'Bob Smith',
                              'age'=>47,
                              'sex'=>'M',
                              'dob'=>'5/12/1956'),
                'pastimes'=>array('golf', 'opera', 'poker', 'rap'),
                'children'=>array('bobby'=>array('age'=>12,
                                                 'sex'=>'M'),
                                  'sally'=>array('age'=>8,
                                                 'sex'=>'F')),
                'CEO');
  
  echo http_build_query($data, 'flags_');
?>

this will output : (word wrapped for readability)

  user%5Bname%5D=Bob+Smith&amp;user%5Bage%5D=47&user%5Bsex%5D=M&
  user%5Bdob%5D=5%2F12%2F1956&pastimes%5B0%5D=golf&pastimes%5B1%5D=opera&
  pastimes%5B2%5D=poker&pastimes%5B3%5D=rap&children%5Bbobby%5D%5Bage%5D=12&
  children%5Bbobby%5D%5Bsex%5D=M&children%5Bsally%5D%5Bage%5D=8&
  children%5Bsally%5D%5Bsex%5D=F&flags_0=CEO

Only the numerically indexed element in the base array "CEO" received a
prefix. The other numeric indices, found under pastimes, do not require a
string prefix to be legal variable names.



Using |http_build_query| with an object

<?php >
  class myClass {
      var $foo;
      var $baz;
  
      function myClass() {
          $this->foo = 'bar';
          $this->baz = 'boom';
      }
  }
  
  $data = new myClass();
  
  echo http_build_query($data); // foo=bar&baz=boom
?>



|parse_str| |parse_url| |urlencode| |array_walk|

vim:ft=help:
