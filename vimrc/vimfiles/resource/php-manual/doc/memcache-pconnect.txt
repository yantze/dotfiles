Memcache::pconnect -- Open memcached server persistent connection

  bool Memcache::pconnect(string host [, int port [, int timeout]])~

|Memcache::pconnect| is similar to |Memcache::connect| with the difference,
that the connection it establishes is persistent. This connection is not
closed after the end of script execution and by |Memcache::close| function.
Also you can use |memcache_pconnect| function.

{host} Point to the host where memcached is listening for connections. This
parameter may also specify other transports like
unix:///path/to/memcached.sock to use UNIX domain sockets, in this case {port}
must also be set to 0.

{port} Point to the port where memcached is listening for connections. Set
this parameter to 0 when using UNIX domain sockets.

{timeout} Value in seconds which will be used for connecting to the daemon.
Think twice before changing the default value of 1 second - you can lose all
the advantages of caching if your connection is too slow.

Returns TRUE on success or FALSE on failure.

|Memcache::pconnect| example

<?php >
  /* procedural API */
  $memcache_obj = memcache_pconnect('memcache_host', 11211);
  
  /* OO API */
  
  $memcache_obj = new Memcache;
  $memcache_obj->pconnect('memcache_host', 11211);
?>





|Memcache::connect|

vim:ft=help:
