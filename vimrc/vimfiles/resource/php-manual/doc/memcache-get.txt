Memcache::get -- Retrieve item from the server

  string Memcache::get(string key [, int flags])~

  array Memcache::get(string key [, int flags, array keys [, array flags]])~

|Memcache::get| returns previously stored data if an item with such {key}
exists on the server at this moment.

You can pass array of keys to |Memcache::get| to get array of values. The
result array will contain only found key-value pairs.

{key} The key or array of keys to fetch.

{flags} If present, flags fetched along with the values will be written to
this parameter. These flags are the same as the ones given to for example
|Memcache::set|. The lowest byte of the int is reserved for pecl/memcache
internal usage (e.g. to indicate compression and serialization status).

Returns the string associated with the {key} or FALSE on failure or if such
{key} was not found.

|Memcache::get| example

<?php >
  /* procedural API */
  $memcache_obj = memcache_connect('memcache_host', 11211);
  $var = memcache_get($memcache_obj, 'some_key');
  
  /* OO API */
  $memcache_obj = new Memcache;
  $memcache_obj->connect('memcache_host', 11211);
  $var = $memcache_obj->get('some_key');
  
  /* 
  You also can use array of keys as a parameter.
  If such item wasn't found at the server, the result
  array simply will not include such key.
  */
  
  /* procedural API */
  $memcache_obj = memcache_connect('memcache_host', 11211);
  $var = memcache_get($memcache_obj, Array('some_key', 'another_key'));
  
  /* OO API */
  $memcache_obj = new Memcache;
  $memcache_obj->connect('memcache_host', 11211);
  $var = $memcache_obj->get(Array('some_key', 'second_key'));
?>





vim:ft=help:
